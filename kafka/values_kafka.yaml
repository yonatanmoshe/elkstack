kafka:
  image:
    repository: bitnami/kafka
    tag: latest
  replicas: 3
  resources: {}
  config:
    listeners: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
    advertised.listeners: INSIDE://kafka-inside:9093,OUTSIDE://kafka-outside:9092
    listener.security.protocol.map: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    security.protocol: PLAINTEXT
    sasl.enabled.mechanisms: ""
    sasl.mechanism.inter.broker.protocol: ""
    inter.broker.listener.name: INSIDE
    auto.create.topics.enable: "true"
    log.retention.hours: "168"
    log.segment.bytes: "1073741824"
    num.partitions: "1"
  readinessProbe:
    tcpSocket:
      port: 9093
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  livenessProbe:
    tcpSocket:
      port: 9093
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

  # Authentication and security settings
  auth:
    enabled: false
    clientProtocol: plaintext
    interBrokerProtocol: plaintext

  sasl:
    enabledMechanisms: ""
    interBrokerMechanism: ""
    controllerMechanism: ""

  tls:
    type: ""
    existingSecret: ""
    autoGenerated: false
    endpointIdentificationAlgorithm: ""
    sslClientAuth: "none"

  # Kafka broker settings
  configurationOverrides:
    "offsets.topic.replication.factor": 3
    "transaction.state.log.replication.factor": 3
    "transaction.state.log.min.isr": 2

  # External access configuration
  externalAccess:
    enabled: true
    service:
      type: LoadBalancer
      loadBalancerClass: nginx
      ports:
      - port: 9092
        targetPort: 9092
      - port: 9093
        targetPort: 9093
      - port: 9094
        targetPort: 9094
      - port: 9095
        targetPort: 9095
  service:
    type: ClusterIP
    port: 9092
    targetPort: 9092
broker:
  replicaCount: 3
